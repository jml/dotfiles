
(custom-set-variables
 ;; custom-set-variables was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(Buffer-menu-use-header-line nil)
 '(auto-mode-case-fold nil)
 '(auto-save-list-file-prefix "~/.emacs.d/auto-save-list/.saves-")
 '(background-mode dark)
 '(backup-by-copying-when-linked t)
 '(backup-directory-alist (quote ((".*" . "~/.emacs.d/backups/"))))
 '(blink-cursor-mode nil)
 '(browse-url-browser-function (quote browse-url-default-macosx-browser))
 '(case-fold-search t)
 '(column-number-mode t)
 '(comment-auto-fill-only-comments t)
 '(compilation-message-face (quote default))
 '(compilation-mode-hook (quote ((lambda nil (toggle-truncate-lines nil)))))
 '(compilation-scroll-output t)
 '(completion-cycle-threshold 5)
 '(current-language-environment "English")
 '(custom-buffer-indent 4)
 '(custom-safe-themes
   (quote
    ("274fa62b00d732d093fc3f120aca1b31a6bb484492f31081c1814a858e25c72e" default)))
 '(dabbrev-case-distinction nil)
 '(dabbrev-case-fold-search nil)
 '(dabbrev-case-replace nil)
 '(dabbrev-upcase-means-case-search t)
 '(desktop-base-file-name ".emacs.d/.emacs.desktop")
 '(desktop-base-lock-name ".emacs.d/.emacs.desktop.lock")
 '(desktop-load-locked-desktop t)
 '(desktop-save t)
 '(ess-display-buffer-reuse-frames nil)
 '(ess-language "R" t)
 '(find-file-existing-other-name nil)
 '(flycheck-flake8rc ".flake8")
 '(flycheck-go-build-install-deps t)
 '(flycheck-go-golint-executable "/Users/jml/go/bin/golint")
 '(flycheck-hlint-language-extensions (quote ("TypeApplications")))
 '(flymake-log-level -1)
 '(flymake-run-in-place nil)
 '(global-font-lock-mode t)
 '(global-linum-mode t)
 '(godef-command "/Users/jml/go/bin/godef")
 '(gofmt-args (quote ("-s" "-w")))
 '(grep-template "grep <C> -I -nH -e <R> <F>")
 '(gutter-buffers-tab-visible-p nil)
 '(haskell-program-name "ghci \"+.\"")
 '(hindent-reformat-buffer-on-save t)
 '(indent-tabs-mode nil)
 '(initial-scratch-message nil)
 '(kill-whole-line nil)
 '(line-number-mode t)
 '(magit-diff-use-overlays nil)
 '(magit-use-overlays nil)
 '(mail-envelope-from (quote header))
 '(mail-specify-envelope-from t)
 '(markdown-command "markdown | smartypants")
 '(markdown-follow-wiki-link-on-enter nil)
 '(markdown-indent-on-enter t)
 '(menu-bar-mode nil)
 '(message-sendmail-envelope-from (quote header))
 '(package-archives
   (quote
    (("gnu" . "https://elpa.gnu.org/packages/")
     ("melpa" . "https://melpa.org/packages/"))))
 '(package-load-list (quote (all paredit)))
 '(package-selected-packages
   (quote
    (company-box helm-lsp company-lsp helm-config lsp-ui helm-company dap-mode dracula-theme groovy-mode elpy bubbleberry-theme flycheck-kotlin kotlin-mode flycheck-pyre ansible-vault jinja2-mode isortify pyenv-mode flycheck-gradle gradle-mode pipenv achievements ag blacken cargo clojure-mode commander dash dash-at-point diff-hl direnv docker dockerfile-mode drag-stuff el-get epl exec-path-from-shell expand-region f flycheck-cask flycheck-gometalinter flycheck-haskell flycheck-package flycheck-pyflakes flycheck-rust flycheck-swift flycheck-swiftlint git git-gutter-fringe go-impl go-projectile go-snippets graphql-mode graphviz-dot-mode haskell-snippets helm-ag helm-flycheck helm-git-grep helm-hoogle helm-nixos-options helm-projectile hindent htmlize idle-highlight-mode intero magit-gh-pulls magit-todos markdown-mode multiple-cursors nix-mode nyan-mode org package-build pallet paradox paredit popwin pretty-sha-path prodigy projectile-direnv protobuf-mode psci python-docstring s shakespeare-mode shut-up smart-mode-line-powerline-theme smartparens smex string-inflection swift-mode terraform-mode toml-mode tuareg visual-fill-column web-mode yafolding yaml-mode yasnippet-snippets)))
 '(paradox-github-token t)
 '(paren-mode (quote paren) nil (paren))
 '(php-mode-speedbar-open nil)
 '(pop-up-windows nil)
 '(query-user-mail-address nil t)
 '(require-final-newline t)
 '(rst-level-face-base-light 30)
 '(safe-local-variable-values
   (quote
    ((haskell-process-use-ghci . t)
     (haskell-indent-spaces . 4)
     (whitespace-style face tabs spaces trailing lines space-before-tab::space newline indentation::space empty space-after-tab::space space-mark tab-mark newline-mark)
     (encoding . utf8)
     (encoding . utf-8))))
 '(scroll-bar-mode nil)
 '(scroll-conservatively 100000)
 '(scroll-down-aggressively nil)
 '(scroll-error-top-bottom t)
 '(scroll-step 0)
 '(scroll-up-aggressively nil)
 '(scrollbars-visible-p nil)
 '(select-enable-clipboard t)
 '(send-mail-function (quote smtpmail-send-it))
 '(sendmail-program "/usr/bin/msmtp")
 '(sentence-end-double-space nil)
 '(shell-file-name "/bin/bash")
 '(show-paren-mode t)
 '(show-paren-style (quote expression))
 '(show-trailing-whitespace t)
 '(smtpmail-smtp-server "smtp.gmail.com")
 '(smtpmail-smtp-service 587)
 '(smtpmail-stream-type (quote starttls))
 '(split-height-threshold nil)
 '(split-width-threshold nil)
 '(sql-pop-to-buffer-after-send-region t)
 '(tab-width 4)
 '(text-mode-hook (quote (text-mode-hook-identify)))
 '(tool-bar-mode nil nil (tool-bar))
 '(toolbar-visible-p nil)
 '(track-eol t)
 '(transient-mark-mode t)
 '(truncate-lines t)
 '(uniquify-buffer-name-style (quote post-forward-angle-brackets) nil (uniquify))
 '(user-mail-address "jml@mumak.net")
 '(vc-handled-backends (quote (RCS CVS SVN SCCS Git Hg Arch)))
 '(vc-make-backup-files t)
 '(visible-bell t)
 '(which-function-mode t)
 '(wiki-follow-name-action (quote find-file))
 '(wiki-name-regexp "\\<[A-Z][a-z]+\\([A-Z][a-z]+\\)+\\>"))
(custom-set-faces
 ;; custom-set-faces was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 )
