
(custom-set-variables
 ;; custom-set-variables was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(Buffer-menu-use-header-line nil)
 '(TeX-shell "bash" t)
 '(TeX-view-style
   (quote
    (("^a4\\(?:dutch\\|paper\\|wide\\)?\\|sem-a4$" "xdvi %d -paper a4")
     ("^a5\\(?:comb\\|paper\\)?$" "xdvi %d -paper a5")
     ("^b5paper$" "xdvi %d -paper b5")
     ("^letterpaper$" "xdvi %d -paper us")
     ("^legalpaper$" "xdvi %d -paper legal")
     ("^executivepaper$" "xdvi %d -paper 7.25x10.5in")
     ("^landscape$" "xdvi %d -paper a4r -s 4")
     ("." "xdvi %d -paper a4"))))
 '(ansi-color-faces-vector
   [default bold shadow italic underline bold bold-italic bold])
 '(ansi-color-names-vector
   ["#272822" "#F92672" "#A6E22E" "#E6DB74" "#66D9EF" "#FD5FF0" "#A1EFE4" "#F8F8F2"])
 '(auto-mode-case-fold nil)
 '(auto-save-list-file-prefix "~/.emacs.d/auto-save-list/.saves-")
 '(background-color "#202020")
 '(background-mode dark)
 '(backup-by-copying-when-linked t)
 '(backup-directory-alist (quote ((".*" . "~/.emacs.d/backups/"))))
 '(bbdb-check-zip-codes-p nil)
 '(bbdb-default-country "UK")
 '(bbdb-north-american-phone-numbers-p nil)
 '(blink-cursor-mode nil)
 '(browse-url-browser-function (quote browse-url-default-macosx-browser))
 '(c-default-style "java")
 '(case-fold-search t)
 '(column-number-mode t)
 '(comment-auto-fill-only-comments t)
 '(compilation-message-face (quote default))
 '(compilation-mode-hook (quote ((lambda nil (toggle-truncate-lines nil)))))
 '(compilation-scroll-output t)
 '(completion-cycle-threshold 5)
 '(current-language-environment "English")
 '(cursor-color "#cccccc")
 '(custom-buffer-indent 4)
 '(custom-safe-themes
   (quote
    ("ec5f697561eaf87b1d3b087dd28e61a2fc9860e4c862ea8e6b0b77bd4967d0ba" "8d805143f2c71cfad5207155234089729bb742a1cb67b7f60357fdd952044315" "c74e83f8aa4c78a121b52146eadb792c9facc5b1f02c917e3dbb454fca931223" "3c83b3676d796422704082049fc38b6966bcad960f896669dfc21a7a37a748fa" "8ed752276957903a270c797c4ab52931199806ccd9f0c3bb77f6f4b9e71b9272" "15348febfa2266c4def59a08ef2846f6032c0797f001d7b9148f30ace0d08bcf" "4980e5ddaae985e4bae004280bd343721271ebb28f22b3e3b2427443e748cd3f" "d5b121d69e48e0f2a84c8e4580f0ba230423391a78fcb4001ccb35d02494d79e" "8aebf25556399b58091e533e455dd50a6a9cba958cc4ebb0aab175863c25b9a4" "3b24f986084001ae46aa29ca791d2bc7f005c5c939646d2b800143526ab4d323" "26614652a4b3515b4bbbb9828d71e206cc249b67c9142c06239ed3418eff95e2" "fe243221e262fe5144e89bb5025e7848cd9fb857ff5b2d8447d115e58fede8f7" "62408b3adcd05f887b6357e5bd9221652984a389e9b015f87bbc596aba62ba48" "bffa9739ce0752a37d9b1eee78fc00ba159748f50dc328af4be661484848e476" "d8f76414f8f2dcb045a37eb155bfaa2e1d17b6573ed43fb1d18b936febc7bbc2" "0c311fb22e6197daba9123f43da98f273d2bfaeeaeb653007ad1ee77f0003037" "60f04e478dedc16397353fb9f33f0d895ea3dab4f581307fbf0aa2f07e658a40" "73fe242ddbaf2b985689e6ec12e29fab2ecd59f765453ad0e93bc502e6e478d6" "3c708b84612872e720796ea1b069cf3c8b3e909a2e1da04131f40e307605b7f9" "e16a771a13a202ee6e276d06098bc77f008b73bbac4d526f160faa2d76c1dd0e" "68769179097d800e415631967544f8b2001dae07972939446e21438b1010748c" "1e7e097ec8cb1f8c3a912d7e1e0331caeed49fef6cff220be63bd2a6ba4cc365" "72cc9ae08503b8e977801c6d6ec17043b55313cda34bcf0e6921f2f04cf2da56" "30fe7e72186c728bd7c3e1b8d67bc10b846119c45a0f35c972ed427c45bacc19" "21d9280256d9d3cf79cbcf62c3e7f3f243209e6251b215aede5026e0c5ad853f" "71b172ea4aad108801421cc5251edb6c792f3adbaecfa1c52e94e3d99634dee7" "5e1d1564b6a2435a2054aa345e81c89539a72c4cad8536cfe02583e0b7d5e2fa" "71efabb175ea1cf5c9768f10dad62bb2606f41d110152f4ace675325d28df8bd" "de58ec8c52e1bba7d46f627c57d0f1a364df9b1e92e45156e5d04d3cec2531d6" "fc5fcb6f1f1c1bc01305694c59a1a861b008c534cae8d0e48e4d5e81ad718bc6" default)))
 '(dabbrev-case-distinction nil)
 '(dabbrev-case-fold-search nil)
 '(dabbrev-case-replace nil)
 '(dabbrev-upcase-means-case-search t)
 '(desktop-base-file-name ".emacs.d/.emacs.desktop")
 '(desktop-base-lock-name ".emacs.d/.emacs.desktop.lock")
 '(desktop-load-locked-desktop t)
 '(desktop-save t)
 '(ess-display-buffer-reuse-frames nil)
 '(ess-language "R" t)
 '(fci-rule-color "#343d46")
 '(find-file-existing-other-name nil)
 '(flycheck-flake8rc ".flake8")
 '(flycheck-go-build-install-deps t)
 '(flycheck-go-golint-executable "/Users/jml/go/bin/golint")
 '(flycheck-hlint-language-extensions (quote ("TypeApplications")))
 '(flymake-log-level -1)
 '(flymake-run-in-place nil)
 '(foreground-color "#cccccc")
 '(global-font-lock-mode t)
 '(global-linum-mode t)
 '(godef-command "/Users/jml/go/bin/godef")
 '(gofmt-args (quote ("-s" "-w")))
 '(grep-template "grep <C> -I -nH -e <R> <F>")
 '(gutter-buffers-tab-visible-p nil)
 '(haskell-mode-hook
   (quote
    (turn-on-haskell-decl-scan turn-on-haskell-doc turn-on-haskell-indentation)))
 '(haskell-program-name "ghci \"+.\"")
 '(highlight-beyond-fill-column-in-modes (quote ("python-mode")))
 '(highlight-changes-colors (quote ("#FD5FF0" "#AE81FF")))
 '(highlight-tail-colors
   (quote
    (("#3C3D37" . 0)
     ("#679A01" . 20)
     ("#4BBEAE" . 30)
     ("#1DB4D0" . 50)
     ("#9A8F21" . 60)
     ("#A75B00" . 70)
     ("#F309DF" . 85)
     ("#3C3D37" . 100))))
 '(hindent-reformat-buffer-on-save t)
 '(hl-paren-background-colors (quote ("#2492db" "#95a5a6" nil)))
 '(hl-paren-colors (quote ("#ecf0f1" "#ecf0f1" "#c0392b")))
 '(indent-tabs-mode nil)
 '(initial-scratch-message nil)
 '(kill-whole-line nil)
 '(line-number-mode t)
 '(magit-diff-use-overlays nil)
 '(magit-use-overlays nil)
 '(mail-envelope-from (quote header))
 '(mail-specify-envelope-from t)
 '(markdown-command "markdown | smartypants")
 '(markdown-follow-wiki-link-on-enter nil)
 '(markdown-indent-on-enter t)
 '(menu-bar-mode nil)
 '(message-sendmail-envelope-from (quote header))
 '(org-agenda-custom-commands
   (quote
    (("n" "Agenda and all TODO's"
      ((agenda "")
       (alltodo)))
     ("w" "Waiting For" todo "WF")
     ("i" "In progress" todo "INPROGRESS"))))
 '(org-agenda-dim-blocked-tasks (quote invisible))
 '(org-archive-location "%s_archive::datetree/*")
 '(org-archive-reversed-order t)
 '(org-archive-save-context-info (quote (time file category todo itags)))
 '(org-completion-use-iswitchb t)
 '(org-enforce-todo-dependencies t)
 '(org-fontify-done-headline t)
 '(org-fontify-whole-heading-line t)
 '(org-hide-leading-stars t)
 '(org-link-abbrev-alist
   (quote
    (("lp" . "https://bugs.launchpad.net/bugs/")
     ("RT" . "https://rt.admin.canonical.com/Ticket/Display.html?id="))))
 '(org-link-frame-setup
   (quote
    ((vm . vm-visit-folder-other-frame)
     (gnus . org-gnus-no-new-news)
     (file . find-file)
     (wl . wl-other-frame))))
 '(org-log-into-drawer "LOGBOOK")
 '(org-modules
   (quote
    (org-bbdb org-bibtex org-docview org-gnus org-info org-jsinfo org-irc org-mew org-mhe org-rmail org-vm org-wl org-w3m)))
 '(org-startup-indented t)
 '(org-stuck-projects (quote ("/-DONE" ("TODO" "AGENDA") nil "")))
 '(org-todo-keywords
   (quote
    ((sequence "TODO(t)" "NEXT(n!)" "INPROGRESS(i!)" "WF(w!)" "|" "DONE(d!)" "CANCELLED(c!@)")
     (sequence))))
 '(org-use-fast-todo-selection t)
 '(org-wikinodes-scope (quote directory))
 '(package-archives
   (quote
    (("gnu" . "https://elpa.gnu.org/packages/")
     ("melpa" . "https://melpa.org/packages/"))))
 '(package-load-list (quote (all paredit)))
 '(package-selected-packages
   (quote
    (groovy-mode elpy bubbleberry-theme flycheck-kotlin kotlin-mode flycheck-pyre ansible-vault jinja2-mode isortify pyenv-mode flycheck-gradle gradle-mode pipenv zenburn-theme achievements ag blacken blackboard-theme cargo clojure-mode commander dash dash-at-point diff-hl direnv docker dockerfile-mode drag-stuff el-get epl exec-path-from-shell expand-region f flatland-theme flatui-theme flycheck-cask flycheck-gometalinter flycheck-haskell flycheck-package flycheck-pyflakes flycheck-rust flycheck-swift flycheck-swiftlint git git-gutter-fringe go-impl go-projectile go-snippets graphql-mode graphviz-dot-mode haskell-snippets helm-ag helm-flycheck helm-git-grep helm-hoogle helm-nixos-options helm-projectile hindent htmlize idle-highlight-mode intero magit-gh-pulls magit-todos markdown-mode multiple-cursors nix-mode noctilux-theme nyan-mode org package-build pallet paradox paredit popwin pretty-sha-path prodigy projectile-direnv protobuf-mode psci python-docstring req-package s shakespeare-mode shut-up smart-mode-line-powerline-theme smartparens smex soft-charcoal-theme solarized-theme spacegray-theme spacemacs-theme string-inflection swift-mode terraform-mode toml-mode tuareg visual-fill-column web-mode yafolding yaml-mode yasnippet-snippets)))
 '(paradox-github-token t)
 '(paren-mode (quote paren) nil (paren))
 '(php-mode-speedbar-open nil)
 '(pop-up-windows nil)
 '(pos-tip-background-color "#FFFACE")
 '(pos-tip-foreground-color "#272822")
 '(query-user-mail-address nil t)
 '(require-final-newline t)
 '(rst-level-face-base-light 30)
 '(safe-local-variable-values
   (quote
    ((intero-targets "banksucker:lib" "banksucker:exe:banksucker" "banksucker:test:banksucker-test")
     (intero-targets "terradiff:lib" "terradiff:exe:terradiff" "terradiff:test:terradiff-tests")
     (intero-targets "compare-revisions:lib" "compare-revisions:exe:compare-revisions" "compare-revisions:test:tasty")
     (intero-targets "mass-driver:lib" "mass-driver:exe:mass-driver" "mass-driver:test:mass-driver-tests")
     (intero-targets "servant:lib" "servant:test:spec" "servant-client:lib" "servant-client:test:spec" "servant-client-core:lib" "servant-client-core:test:spec" "servant-server:lib" "servant-server:test:spec")
     (intero-targets "servant:lib" "servant-server:lib" "servant-server:test:spec")
     (intero-targets "servant:lib" "servant:test:doctests" "servant:test:spec" "servant-server:lib" "servant-server:test:doctests" "servant-server:test:spec")
     (intero-targets ":lib" ":test:graphql-api-tests")
     (intero-targets ":lib" ":test:graphql-api-doctests" ":test:graphql-api-tests")
     (intero-stack-yaml . "/Users/jml/src/graphql-api/stack-8.2.yaml")
     (intero-targets "magic-wormhole:lib" "magic-wormhole:exe:hocus-pocus" "magic-wormhole:test:tasty")
     (intero-targets "compare-revisions:lib" "compare-revisions:exe:compare-images" "compare-revisions:exe:compare-revisions" "compare-revisions:test:tasty")
     (flycheck-hlint-language-extensions quote
                                         ("NoImplicitPrelude"))
     (haskell-process-use-ghci . t)
     (haskell-indent-spaces . 4)
     (whitespace-style face tabs spaces trailing lines space-before-tab::space newline indentation::space empty space-after-tab::space space-mark tab-mark newline-mark)
     (encoding . utf8)
     (encoding . utf-8))))
 '(scroll-bar-mode nil)
 '(scroll-conservatively 100000)
 '(scroll-down-aggressively nil)
 '(scroll-error-top-bottom t)
 '(scroll-step 0)
 '(scroll-up-aggressively nil)
 '(scrollbars-visible-p nil)
 '(select-enable-clipboard t)
 '(send-mail-function (quote smtpmail-send-it))
 '(sendmail-program "/usr/bin/msmtp")
 '(sentence-end-double-space nil)
 '(shell-file-name "/bin/bash")
 '(show-paren-mode t)
 '(show-paren-style (quote expression))
 '(show-trailing-whitespace t)
 '(sml/active-background-color "#34495e")
 '(sml/active-foreground-color "#ecf0f1")
 '(sml/inactive-background-color "#dfe4ea")
 '(sml/inactive-foreground-color "#34495e")
 '(smtpmail-smtp-server "smtp.gmail.com")
 '(smtpmail-smtp-service 587)
 '(smtpmail-stream-type (quote starttls))
 '(split-height-threshold nil)
 '(split-width-threshold nil)
 '(sql-pop-to-buffer-after-send-region t)
 '(tab-width 4)
 '(tex-shell-file-name nil)
 '(text-mode-hook (quote (text-mode-hook-identify)))
 '(tool-bar-mode nil nil (tool-bar))
 '(toolbar-visible-p nil)
 '(track-eol t)
 '(transient-mark-mode t)
 '(truncate-lines t)
 '(uniquify-buffer-name-style (quote post-forward-angle-brackets) nil (uniquify))
 '(user-mail-address "jml@mumak.net")
 '(vc-annotate-background nil)
 '(vc-annotate-color-map
   (quote
    ((20 . "#bf616a")
     (40 . "#DCA432")
     (60 . "#ebcb8b")
     (80 . "#B4EB89")
     (100 . "#89EBCA")
     (120 . "#89AAEB")
     (140 . "#C189EB")
     (160 . "#bf616a")
     (180 . "#DCA432")
     (200 . "#ebcb8b")
     (220 . "#B4EB89")
     (240 . "#89EBCA")
     (260 . "#89AAEB")
     (280 . "#C189EB")
     (300 . "#bf616a")
     (320 . "#DCA432")
     (340 . "#ebcb8b")
     (360 . "#B4EB89"))))
 '(vc-annotate-very-old-color nil)
 '(vc-handled-backends (quote (RCS CVS SVN SCCS Git Hg Arch)))
 '(vc-make-backup-files t)
 '(visible-bell t)
 '(weechat-color-list
   (unspecified "#272822" "#3C3D37" "#F70057" "#F92672" "#86C30D" "#A6E22E" "#BEB244" "#E6DB74" "#40CAE4" "#66D9EF" "#FB35EA" "#FD5FF0" "#74DBCD" "#A1EFE4" "#F8F8F2" "#F8F8F0"))
 '(which-function-mode t)
 '(wiki-follow-name-action (quote find-file))
 '(wiki-name-regexp "\\<[A-Z][a-z]+\\([A-Z][a-z]+\\)+\\>"))
(custom-set-faces
 ;; custom-set-faces was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 )
